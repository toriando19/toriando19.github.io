///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Import  ////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Import relevant modules for the application
import express from 'express';
import helmet from 'helmet';

// Import the connection to the Mongo and Postgres database
import { connectToPGDatabase } from '../database/postgres/connect-postgres.mjs';
import { connectToMongoDB } from '../database/mongo/connect-mongo.mjs';

// Import the routes for the application
import userRoutes from './index.mjs';


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Middleware  ////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Application: Uses Express as route- and server-handler 
const app = express();

// Handler for JSON and forms
app.use(express.json());
app.use(express.urlencoded({ extended: true }));


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Content Security Policy  ///////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Helmet: Securing Express-apps
app.use(helmet());

// Configure CSP for the application
app.use(helmet.contentSecurityPolicy({
  directives: {
    defaultSrc: ["'self'"],                                     // Allow resources only from the same origin
    scriptSrc: ["'self'", 'https://trusted-cdn.com'],           // Allow scripts from the same origin and a trusted CDN
    styleSrc: ["'self'", "'unsafe-inline'"],                    // Allow styles from the same origin and inline styles (if needed)
    imgSrc: ["'self'", "data:", 'https://trusted-images.com'],  // Allow images from the same origin, inline (data URI), and a trusted image host
    connectSrc: ["'self'", 'https://api.trusted.com'],          // Allow AJAX and WebSocket requests to the same origin and a trusted API
    fontSrc: ["'self'", 'https://fonts.gstatic.com'],           // Allow fonts from the same origin and Google Fonts
    objectSrc: ["'none'"],                                      // Disallow plugins like Flash or Java applets
    upgradeInsecureRequests: [],                                // Upgrade all HTTP requests to HTTPS
  }
}));

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Application Features: Database and Routes  /////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Connect to the PostgreSQL database
connectToPGDatabase();

// Connect to the Mongo database
connectToMongoDB();

// Use the user routes
app.use(userRoutes);


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Local Server  //////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

const PORT = 3000;
app.listen(PORT, () => {
  console.log(`Server is running on http://localhost:${PORT}`);
});


